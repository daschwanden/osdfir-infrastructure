{{- $cert := genSelfSignedCert .Values.fleetspeakSubjectCommonName nil (list "fleetspeak-frontend")  3650 }}
apiVersion: v1
kind: Secret
metadata:
  name: sec-fleetspeak-frontend-components
stringData:
  frontend.components.textproto: |
    mysql_data_source_name: "{{ .Values.fleetspeakMysqlDbUserName }}:{{ .Values.fleetspeakMysqlDbUserPassword }}@tcp({{ .Values.fleetspeakMysqlDbAddress }}:{{ .Values.fleetspeakMysqlDbPort }})/{{ .Values.fleetspeakMysqlDbName }}"
    https_config: <
      listen_address: "0.0.0.0:{{ .Values.fleetspeakFrontendListenPort }}"
      {{- if .Values.fleetspeakGenerateCert }}
      certificates: {{ $cert.Cert | quote }}
      key: {{ $cert.Key | quote }}
      {{- else }}
      certificates: {{ default (.Files.Get "../../certs/fleetspeak-frontend.crt") .Values.fleetspeakFrontendCert | quote }}
      key: {{ default (.Files.Get "../../certs/fleetspeak-frontend.key") .Values.fleetspeakFrontendKey | quote }}
      {{- end }}
      frontend_config: <
        https_header_checksum_config: <
          client_certificate_header: "client-certificate" 
          client_certificate_checksum_header: "X-Client-Cert-Hash"
        >
      >
    >
    health_check_config: <
      listen_address: "0.0.0.0:{{ .Values.fleetspeakFrontendHealthCheckPort }}"
    >
    notification_listen_address: "0.0.0.0:{{ .Values.fleetspeakFrontendNotificationPort }}"
    notification_public_address: "FLEETSPEAK_FRONTEND_IP:{{ .Values.fleetspeakFrontendNotificationPort }}"
    stats_config: <
      address: "0.0.0.0:{{ .Values.prometheusMetricsPort }}"
    >
